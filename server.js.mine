/*********************************** BASE SETUP **************************************/

var express  = require('express');
// creation de l'app express
var app      = express();     
// mongoose: module pour mongodb
var mongoose = require('mongoose');
// affiche les requêtes dans la console
var morgan = require('morgan');  
// récupère les infos dans le corps des requêtes
var bodyParser = require('body-parser');    
// simulate DELETE and PUT (express4)
var methodOverride = require('method-override'); 
// lit les cookies
var cookieParser = require('cookie-parser');
// persistent login sessions
var session = require('express-session');
// gère l'authentification
var passport = require('passport');
// messages flash stockés dans les sessions

// creation du serveur
var server = require('http').createServer(app);

// chargement de socket.io
var io = require('socket.io').listen(server);

// config du port
var port = process.env.PORT || 8080;



/*********************************** CONFIGURATION **************************************/

// charge la config de la BDD
var database = require('./config/database');

// database connexion
mongoose.connect(database.url);

// autorise les connections internes et les requêtes http sur la même machine
app.use(function(req, res, next) {
    res.setHeader("Access-Control-Allow-Origin", "*");
    res.setHeader("Access-Control-Allow-Headers", "Origin, X-Requested-With, Content-Type, Accept");
    res.setHeader("Access-Control-Allow-Methods", "GET, POST, PUT, OPTIONS, DELETE");
    next();
});


app.use(express.static(__dirname + '/public'));

app.use(morgan('dev'));      
// parse application/x-www-form-urlencoded
app.use(bodyParser.urlencoded({'extended':'true'}));  
// parse application/json
app.use(bodyParser.json());           
// parse application/vnd.api+json as json
app.use(bodyParser.json({ type: 'application/vnd.api+json' })); 
app.use(methodOverride('X-HTTP-Method-Override'));
app.use(cookieParser());

// configuration du passport
require('./config/passport')(passport);

// required for passport

// session secret
app.use(session({ secret: 'ilovescotchscotchyscotchscotch' })); 
app.use(passport.initialize());
app.use(passport.session()); 



/****************************** ROUTES POUR L'API **************************************/

require('./app/routes/routes-users.js')(app, passport);
require('./app/routes/routes-courses.js')(app);


/****************************** ECOUTE DU SOCKET ****************************************/

// quand un client se connecte, on le note dans la console
io.sockets.on('connection', function(socket) {
    console.log('Un client est connecté!');
    socket.emit('message');
    
    
    socket.on('modif', function () {
        socket.broadcast.emit('makeGet')
    });
    
});
 


/******************************* LANCEMENT DU SERVEUR ****************************************/

server.listen(port);
console.log("App listening on port 8080");